#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const mkdirp = require('./lib/mkdirp/index');
const syncFunctionLoader = require('./src/loading/sync-function-loader');

const errorStatus = 1;

// Verify the correct number of commandline params
if (process.argv.length !== 4) {
  showUsage();

  process.exit(errorStatus);
}

const syncDocDefnFilename = process.argv[2];
const outputFilename = process.argv[3];

let syncFunc;
try {
  syncFunc = syncFunctionLoader.load(syncDocDefnFilename);
} catch (ex) {
  process.exit(errorStatus);
}

try {
  const outputDirectory = path.dirname(outputFilename);
  if (!fs.existsSync(outputDirectory)) {
    mkdirp.sync(outputDirectory);
  }
} catch (ex) {
  console.error(`ERROR: Unable to create the sync function output directory: ${ex}`);

  process.exit(errorStatus);
}

try {
  fs.writeFileSync(outputFilename, syncFunc, 'utf8');
} catch (ex) {
  console.error(`ERROR: Unable to write the sync function to the output file: ${ex}`);

  process.exit(errorStatus);
}

console.info(`Sync function written to ${outputFilename}`);


function showUsage() {
  const nodeBinary = path.basename(process.argv[0]);
  const scriptName = path.basename(process.argv[1]);

  console.info(
`A utility for generating sync functions for Couchbase Sync Gateway.

Usage:  ${scriptName} <document_definitions_file> <output_file>
   or:  ${nodeBinary} ${scriptName} <document_definitions_file> <output_file>

Arguments:
    document_definitions_file
        Path to the JavaScript file that defines the document types to use in the generated sync function
    output_file
        Path to the file in which to output the sync function

For example:  ${scriptName} /path/to/my-sync-doc-definitions.js /path/to/my-new-sync-function.js

See the README for more information.`
  );
}
